@page
@model Bmcs.Pages.Game.IndexModel

@{
    ViewData[ViewDataConstant.Title] = "試合一覧";
}

<h1 class="d-inline-block">
    @ViewData[ViewDataConstant.Title]
</h1>

@await Html.PartialAsync("~/Pages/Shared/_Help.cshtml")

<h4>@Model.Team.TeamName</h4>

<div class="form-group">
    @if (Model.IsMyTeam)
    {
        <a class="btn btn-primary" asp-page="Create">試合へ</a>
    }
    <a class="btn btn-secondary" asp-page="/Top/Index">戻る</a>
</div>

<div class="table-responsive">
    <table class="table table-hover table-sm table-bordered">
        <thead class="thead-light">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Game[0].GameDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Game[0].GameClassName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Game[0].OpponentTeamName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Game[0].OpponentTeamAbbreviation)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Game[0].StadiumName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Game[0].WeatherClassName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Game[0].WinLoseClassName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Game[0].GameScore)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Game[0].BatFirstBatSecondClassName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Game[0].GameInputTypeClassName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Game[0].StatusClassName)
                </th>
                @if (Model.IsAdmin())
                {
                    <th>
                        @Html.DisplayNameFor(model => model.Game[0].EntryUserID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Game[0].EntryDatetime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Game[0].UpdateUserID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Game[0].UpdateDatetime)
                    </th>
                }
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Game)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.GameDateFormat)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.GameClassName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OpponentTeamName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OpponentTeamAbbreviation)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StadiumName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.WeatherClassName)
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.WinLoseClassName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.GameScore)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BatFirstBatSecondClassName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.GameInputTypeClassName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StatusClassName)
                    </td>
                    @if (Model.IsAdmin())
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.EntryUserID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EntryDatetime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UpdateUserID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UpdateDatetime)
                        </td>
                    }
                    @if (Model.IsMyTeam || Model.IsAdmin())
                    {
                        <td>
                            @if (item.StatusClass == StatusClass.DuringGame)
                            {
                                <a class="btn btn-primary btn-sm" asp-page="/GameScene/Edit" asp-route-gameID="@item.GameID">試合入力</a>
                                <span>&nbsp;</span>
                            }
                            @if (item.StatusClass == StatusClass.BeforeFix
                      || item.StatusClass == StatusClass.EndGame)
                            {
                                <a class="btn btn-primary btn-sm" asp-page="/GameScore/Edit" asp-route-gameID="@item.GameID">試合結果編集</a>
                                <span>&nbsp;</span>
                            }
                            @if (item.StatusClass == StatusClass.EndGame)
                            {
                                <a class="btn btn-primary btn-sm" asp-page="/GameScore/Details" asp-route-gameID="@item.GameID">試合結果</a>
                                <span>&nbsp;</span>
                            }
                            <a class="btn btn-primary btn-sm" asp-page="./Edit" asp-route-id="@item.GameID">試合情報編集</a>
                            <span>&nbsp;</span>
                            @*<a class="btn btn-primary" asp-page="./Details" asp-route-id="@item.GameID">詳細</a> |*@
                            <a class="btn btn-danger btn-sm" asp-page="./Delete" asp-route-id="@item.GameID">削除</a>
                        </td>
                    }
                    else
                    {
                        <td>
                            @if (item.StatusClass == StatusClass.EndGame)
                            {
                                <a class="btn btn-primary btn-sm" asp-page="/GameScore/Details" asp-route-gameID="@item.GameID">試合結果</a>
                            }
                            @*<a class="btn btn-primary btn-sm" asp-page="./Details" asp-route-id="@item.GameID">詳細</a>*@
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

@{
    var prevDisabled = !Model.Game.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Game.HasNextPage ? "disabled" : "";
}

<div class="mt-1">
    <ul class="pagination">
        <li class="page-item @prevDisabled">
            <a asp-page="/Game/Index"
               asp-route-teamID="@Model.Team.TeamID"
               class="page-link">
                <<
            </a>
        </li>

        @if (Model.Game.PageIndex >= 4)
        {
            <li class="page-item disabled">
                <span class="page-link">
                    …
                </span>
            </li>
        }

        @for (var i = Model.Game.PageIndex - 2; i <= Model.Game.PageIndex + 2; i++)
        {
            @if (i < 1 || i > Model.Game.TotalPages)
            {
                continue;
            }

            @if (Model.Game.PageIndex == i)
            {
                <li class="page-item active">
                    <a asp-page="/Game/Index"
                       asp-route-teamID="@Model.Team.TeamID"
                       asp-route-pageIndex="@(i)"
                       class="page-link">
                        @(i)
                    </a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a asp-page="/Game/Index"
                       asp-route-teamID="@Model.Team.TeamID"
                       asp-route-pageIndex="@(i)"
                       class="page-link">
                        @(i)
                    </a>
                </li>
            }
        }

        @if (Model.Game.TotalPages - Model.Game.PageIndex >= 3)
        {
            <li class="page-item disabled">
                <span class="page-link">
                    …
                </span>
            </li>
        }

        <li class="page-item @nextDisabled">
            <a asp-page="/Game/Index"
               asp-route-teamID="@Model.Team.TeamID"
               asp-route-pageIndex="@(Model.Game.TotalPages)"
               class="page-link">
                >>
            </a>
        </li>
    </ul>
</div>
