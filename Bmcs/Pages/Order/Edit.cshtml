@page
@model Bmcs.Pages.Order.EditModel


<h1>@ViewData[ViewDataConstant.Title]</h1>

<h4>@Model.Game.Team.TeamName</h4>
<hr />
<div class="row">
    <div class="col-md-8">
        <form method="post">
            <span asp-validation-for="Game.GameID" class="text-danger"></span>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Game.GameID" />
            <input type="hidden" asp-for="GameSceneID" />
            <input type="hidden" asp-for="IsDuringGame" />
            <div class="table-responsive">
                <table class="table table-hover table-sm table-bordered" id="order">
                    <thead class="thead-light">
                        <tr>
                            <th style="width: 10%;">
                                @Html.DisplayNameFor(model => model.OrderList[0].BattingOrder)
                            </th>
                            <th style="width: 50%;">
                                @Html.DisplayNameFor(model => model.OrderList[0].MemberID)
                            </th>
                            <th style="width: 20%;">
                                @Html.DisplayNameFor(model => model.OrderList[0].PositionClass)
                            </th>
                            <th style="width: 20%;">

                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.OrderList.Count; i++)
                        {
                            <tr id="@("OrderList_" + i.ToString())">
                                <td class="text-center align-middle js-displaybattingorder">
                                    @Model.OrderList[i].BattingOrder.DisplayDecimal()
                                </td>
                                <td>
                                    <select asp-for="@Model.OrderList[i].MemberID" class="form-control js-memberid js-rename" asp-items="@Model.MemberIDList"></select>
                                </td>
                                <td>
                                    <select asp-for="@Model.OrderList[i].PositionClass" class="form-control js-positionclass js-rename" asp-items="@Model.PositionClassList"></select>
                                </td>
                                <td>
                                    <input type="button" value="削除" class="btn btn-danger js-order-delete" />
                                    <input class="js-battingorder js-rename" type="hidden" asp-for="@Model.OrderList[i].BattingOrder" />
                                    <input class="js-rename" type="hidden" asp-for="@Model.OrderList[i].GameID" />
                                    <input class="js-rename" type="hidden" asp-for="@Model.OrderList[i].TeamID" />
                                    <input class="js-rename" type="hidden" asp-for="@Model.OrderList[i].GameSceneID" />
                                    <input class="js-rename" type="hidden" asp-for="@Model.OrderList[i].ParticipationIndex" />
                                    <input class="js-rename" type="hidden" asp-for="@Model.OrderList[i].ParticipationClass" />
                                    <input class="js-rename" type="hidden" asp-for="@Model.OrderList[i].OrderDataClass" />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="form-group">
                @if (!Model.IsDuringGame)
                {
                    <input type="button" value="オーダー追加" class="btn btn-success" id="add-order" />
                }
                else
                {
                    <input type="button" value="オーダー追加" class="btn btn-success" data-toggle="modal" data-target="#interrupt-order"/>

                    <!-- Modal -->
                    <div class="modal fade" id="interrupt-order" tabindex="-1" role="dialog" aria-labelledby="interrupt-order-title" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="interrupt-order-title">オーダー追加</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <p>追加する打順を入力してください。<br />打順間に割り込みたい場合は小数を含めた打順指定が可能です。</p>
                                    <input id="interrupt-batting-order" class="form-control" type="number" step="0.1" min="0" />
                                    <p class="text-danger interrupt-order-input-error d-none">打順を入力してください。</p>
                                    <p class="text-danger interrupt-order-decimal-error d-none">小数は第一位のみ有効です。</p>
                                    <p class="text-danger interrupt-order-exist-error d-none">既に存在する打順を指定することはできません。</p>
                                </div>
                                <div class="modal-footer">
                                    <button id="add-order-modal" type="button" class="btn btn-success">追加</button>
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">戻る</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="table-responsive">
                <table class="table table-hover table-sm table-bordered" id="only-defense">
                    <thead class="thead-light">
                        <tr>
                            <th style="width: 10%;">

                            </th>
                            <th style="width: 50%;">
                                @Html.DisplayNameFor(model => model.OrderList[0].MemberID)
                            </th>
                            <th style="width: 20%;">
                                @Html.DisplayNameFor(model => model.OrderList[0].PositionClass)
                            </th>
                            <th style="width: 20%;">

                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.OnlyDefenseList.Count; i++)
                        {
                            <tr id="@("OnlyDefenseList_" + i.ToString())">
                                <td>
                                </td>
                                <td>
                                    <select asp-for="@Model.OnlyDefenseList[i].MemberID" class="form-control js-memberid js-rename" asp-items="@Model.MemberIDList"></select>
                                </td>
                                <td>
                                    <select asp-for="@Model.OnlyDefenseList[i].PositionClass" class="form-control js-positionclass js-rename" asp-items="@Model.PositionClassList"></select>
                                </td>
                                <td>
                                    <input type="button" value="削除" class="btn btn-danger js-only-defense-delete js-rename"/>
                                    <input class="js-battingorder js-rename" type="hidden" asp-for="@Model.OnlyDefenseList[i].BattingOrder" />
                                    <input class="js-rename" type="hidden" asp-for="@Model.OnlyDefenseList[i].GameID" />
                                    <input class="js-rename" type="hidden" asp-for="@Model.OnlyDefenseList[i].TeamID" />
                                    <input class="js-rename" type="hidden" asp-for="@Model.OnlyDefenseList[i].GameSceneID" />
                                    <input class="js-rename" type="hidden" asp-for="@Model.OnlyDefenseList[i].ParticipationIndex" />
                                    <input class="js-rename" type="hidden" asp-for="@Model.OnlyDefenseList[i].ParticipationClass" />
                                    <input class="js-rename" type="hidden" asp-for="@Model.OnlyDefenseList[i].OrderDataClass" />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="form-group">
                <input type="button" value="守備のみ追加" class="btn btn-success" id="add-only-defense" />
            </div>
            <div class="form-group">
                <input type="submit" value="登録" class="btn btn-primary" />
                @if (!Model.IsDuringGame)
                {
                    <a class="btn btn-secondary" asp-page="/Game/Edit" asp-route-id="@Model.Game.GameID">戻る</a>
                }
                else
                {
                    <a class="btn btn-secondary" asp-page="/GameScene/Edit" asp-route-gameID="@Model.Game.GameID" asp-route-gameSceneID="@Model.GameSceneID" asp-route-isOrderChange="@true">戻る</a>
                }
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/order.js"></script>
}

