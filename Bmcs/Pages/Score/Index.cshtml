@page
@model Bmcs.Pages.Score.IndexModel

<h1>@ViewData[ViewDataConstant.Title]</h1>

@if (!string.IsNullOrEmpty(Model.SelectTeamID))
{
    <h4>@Model.Team.TeamName</h4>
}

<form method="get" asp-page="/Score/Index">
    <input type="hidden" asp-for="ScorePageClass" name="scorePageClass" />
    <input type="hidden" asp-for="SelectTeamID" name="teamID" />
    <input type="hidden" asp-for="IsPublic" name="isPublic" />
    <input type="hidden" asp-for="SortItem" name="sortItem" />
    <div class="row">
        <div class="col-md-3">
            <table class="table table-sm table-borderless">
                <thead>
                    <tr>
                        <th>
                            年
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <select asp-for="@Model.Year" class="form-control" asp-items="@Model.YearList"></select>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="col-md-3">
            <table class="table table-sm table-borderless">
                <thead>
                    <tr>
                        <th>
                            試合種別
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <select asp-for="@Model.GameClass" class="form-control" asp-items="@Model.GameClassIncludeAllList"></select>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        @if (string.IsNullOrEmpty(Model.SelectTeamID))
        {
            <div class="col-md-3">
                <table class="table table-sm table-borderless">
                    <thead>
                        <tr>
                            <th>
                                カテゴリ
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <select asp-for="@Model.TeamCategoryClass" class="form-control" asp-items="@Model.TeamCategoryClassIncludeAllList"></select>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="col-md-3">
                <table class="table table-sm table-borderless">
                    <thead>
                        <tr>
                            <th>
                                使用球
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <select asp-for="@Model.UseBallClass" class="form-control" asp-items="@Model.UseBallClassIncludeAllList"></select>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        }

        @if ((Model.ScorePageClass == ScorePageClass.Index
               || Model.ScorePageClass == ScorePageClass.Team)
           && string.IsNullOrEmpty(Model.SelectTeamID))
        {
            <div class="col-md-3">
                <table class="table table-sm table-borderless">
                    <thead>
                        <tr>
                            <th>
                                規定試合数(@(Model.RegulationGames)試合)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <select asp-for="@Model.IsIgnoreRegulationGames" class="form-control" asp-items="@Model.IgnoreRegulationList"></select>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        }

        @if (Model.ScorePageClass == ScorePageClass.Index
         || Model.ScorePageClass == ScorePageClass.Pitcher)
        {
            <div class="col-md-3">
                <table class="table table-sm table-borderless">
                    <thead>
                        <tr>
                            <th>
                                規定投球回(@(Model.RegulationInnings)回)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <select asp-for="@Model.IsIgnoreRegulationInnings" class="form-control" asp-items="@Model.IgnoreRegulationList"></select>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        }

        @if (Model.ScorePageClass == ScorePageClass.Index
         || Model.ScorePageClass == ScorePageClass.Fielder)
        {
            <div class="col-md-3">
                <table class="table table-sm table-borderless">
                    <thead>
                        <tr>
                            <th>
                                規定打席(@(Model.RegulationAtBatting)打席)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <select asp-for="@Model.IsIgnoreRegulationAtBatting" class="form-control" asp-items="@Model.IgnoreRegulationList"></select>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        }
    </div>

    <div class="form-group">
        <input type="submit" value="表示" class="btn btn-primary" />
    </div>
</form>

@if (Model.GameScoreTeamList.Any())
{
    <div class="box">
        <div class="box-title">
            チーム成績
        </div>
        <div class="box-inner">
            @if (Model.ScorePageClass == ScorePageClass.Index)
            {
                <div class="table-responsive">
                    <table class="table table-sm table-bordered">
                        <thead class="thead-light">
                            <tr>
                                @if (!string.IsNullOrEmpty(Model.SelectTeamID))
                                {
                                    <th class="column-fix-left">
                                        @Html.DisplayNameFor(model => model.GameScoreTeamList[0].Team.TeamName)
                                    </th>
                                }
                                else
                                {
                                    <th class="text-center column-fix-left">
                                        @Html.DisplayNameFor(model => model.GameScoreTeamList[0].Rank)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.GameScoreTeamList[0].Team.TeamName)
                                    </th>
                                }
                                <th>
                                    @Html.DisplayNameFor(model => model.GameScoreTeamList[0].GameCount)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.GameScoreTeamList[0].Win)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.GameScoreTeamList[0].Lose)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.GameScoreTeamList[0].Draw)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.GameScoreTeamList[0].WinRate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.GameScoreTeamList[0].Run)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.GameScoreTeamList[0].PitcherRun)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.GameScoreTeamList[0].HomeRun)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.GameScoreTeamList[0].StolenBase)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.GameScoreTeamList[0].BattingAverage)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.GameScoreTeamList[0].EarnedRunAverage)
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var teamRank = 0;
                                var teamRankValue = (decimal)-1;
                            }

                            @foreach (var item in Model.GameScoreTeamList.Where(r => ((r.GameCount >= Model.RegulationGames && !Model.IsIgnoreRegulationGames) || (Model.IsIgnoreRegulationGames))).OrderByDescending(r => r.WinRate))
                            {
                                <tr>
                                    @if (!string.IsNullOrEmpty(Model.SelectTeamID))
                                    {
                                        <td class="align-middle column-fix-left">
                                            <a asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@item.Team.TeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting">@item.Team.TeamName</a>
                                        </td>
                                    }
                                    else
                                    {
                                        <td class="text-center align-middle column-fix-left">
                                            @if (teamRankValue != item.WinRate.NullToZero())
                                            {
                                                teamRank += 1;
                                                @teamRank
                                            }
                                            @{teamRankValue = item.WinRate.NullToZero();}
                                        </td>
                                        <td class="align-middle">
                                            <a asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@item.Team.TeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting">@item.Team.TeamName</a>
                                        </td>
                                    }
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.GameCount)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.Win)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.Lose)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.Draw)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.WinRateFormat)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.Run)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.PitcherRun)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.HomeRun)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.StolenBase)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.BattingAverageFormat)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.EarnedRunAverageFormat)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="form-group">
                    <a class="btn btn-primary" asp-page="/Score/Index" asp-route-scorePageClass="@ScorePageClass.Team" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="WinRate">チーム成績詳細</a>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-sm table-bordered">
                        <thead class="thead-light">
                            <tr>
                                @if (!string.IsNullOrEmpty(Model.SelectTeamID))
                                {
                                    <th class="column-fix-left">
                                        @Html.DisplayNameFor(model => model.GameScoreTeamList[0].Team.TeamName)
                                    </th>
                                }
                                else
                                {
                                    <th class="text-center column-fix-left">
                                        @Html.DisplayNameFor(model => model.GameScoreTeamList[0].Rank)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.GameScoreTeamList[0].Team.TeamName)
                                    </th>
                                }
                                <th>
                                    <a class="GameCount" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="GameCount">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].GameCount)</a>
                                </th>
                                <th>
                                    <a class="WinRate" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="WinRate">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].WinRate)</a>                           
                                </th>
                                <th>
                                    <a class="Win" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="Win">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].Win)</a>
                                </th>
                                <th>
                                    <a class="Lose" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="Lose">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].Lose)</a>
                                </th>
                                <th>
                                    <a class="Draw" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="Draw">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].Draw)</a>
                                </th>
                                <th>
                                    <a class="BattingAverage" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="BattingAverage">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].BattingAverage)</a>
                                </th>
                                <th>
                                    <a class="Hit" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="Hit">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].Hit)</a>
                                </th>
                                <th>
                                    <a class="DoubleHit" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="DoubleHit">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].DoubleHit)</a>
                                </th>
                                <th>
                                    <a class="TripleHit" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="TripleHit">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].TripleHit)</a>
                                </th>
                                <th>
                                    <a class="HomeRun" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="HomeRun">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].HomeRun)</a>
                                </th>
                                <th>
                                    <a class="RBI" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="RBI">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].RBI)</a>
                                </th>
                                <th>
                                    <a class="Run" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="Run">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].Run)</a>
                                </th>
                                <th>
                                    <a class="StolenBaseSuccessRate" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="StolenBaseSuccessRate">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].StolenBaseSuccessRate)</a>
                                </th>
                                <th>
                                    <a class="StolenBase" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="StolenBase">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].StolenBase)</a>
                                </th>
                                <th>
                                    <a class="FourBall" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="FourBall">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].FourBall)</a>
                                </th>
                                <th>
                                    <a class="DeadBall" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="DeadBall">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].DeadBall)</a>
                                </th>
                                <th>
                                    <a class="Sacrifice" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="Sacrifice">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].Sacrifice)</a>
                                </th>
                                <th>
                                    <a class="SacrificeFly" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="SacrificeFly">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].SacrificeFly)</a>
                                </th>
                                <th>
                                    <a class="LeftOnBase" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="LeftOnBase">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].LeftOnBase)</a>
                                </th>
                                <th>
                                    <a class="OnBasePercentage" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="OnBasePercentage">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].OnBasePercentage)</a>
                                </th>
                                <th>
                                    <a class="SluggingPercentage" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="SluggingPercentage">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].SluggingPercentage)</a>
                                </th>
                                <th>
                                    <a class="Ops" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="Ops">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].Ops)</a>
                                </th>
                                <th>
                                    <a class="ScoringPositionBattingAverage" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="ScoringPositionBattingAverage">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].ScoringPositionBattingAverage)</a>
                                </th>
                                <th>
                                    <a class="StrikeOut" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="StrikeOut">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].StrikeOut)</a>
                                </th>
                                <th>
                                    <a class="StopStolenBaseRate" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="StopStolenBaseRate">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].StopStolenBaseRate)</a>
                                </th>
                                <th>
                                    <a class="StopStolenBase" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="StopStolenBase">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].StopStolenBase)</a>
                                </th>
                                <th>
                                    <a class="OwnError" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="OwnError">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].OwnError)</a>
                                </th>
                                <th>
                                    <a class="EarnedRunAverage" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="EarnedRunAverage">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].EarnedRunAverage)</a>
                                </th>
                                <th>
                                    <a class="PitcherBattingAverage" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="PitcherBattingAverage">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].PitcherBattingAverage)</a>
                                </th>
                                <th>
                                    <a class="PitcherHit" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="PitcherHit">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].PitcherHit)</a>
                                </th>
                                <th>
                                    <a class="PitcherHomeRun" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="PitcherHomeRun">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].PitcherHomeRun)</a>
                                </th>
                                <th>
                                    <a class="PitcherRun" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="PitcherRun">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].PitcherRun)</a>
                                </th>
                                <th>
                                    <a class="PitcherEarnedRun" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="PitcherEarnedRun">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].PitcherEarnedRun)</a>
                                </th>
                                <th>
                                    <a class="PitcherFourBall" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="PitcherFourBall">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].PitcherFourBall)</a>
                                </th>
                                <th>
                                    <a class="PitcherDeadBall" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="PitcherDeadBall">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].PitcherDeadBall)</a>
                                </th>
                                <th>
                                    <a class="Whip" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="Whip">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].Whip)</a>
                                </th>
                                <th>
                                    <a class="PitcherScoringPositionBattingAverage" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="PitcherScoringPositionBattingAverage">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].PitcherScoringPositionBattingAverage)</a>
                                </th>
                                <th>
                                    <a class="PitcherStrikeOutRate" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="PitcherStrikeOutRate">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].PitcherStrikeOutRate)</a>
                                </th>
                                <th>
                                    <a class="PitcherStrikeOut" asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="PitcherStrikeOut">@Html.DisplayNameFor(model => model.GameScoreTeamList[0].PitcherStrikeOut)</a>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var teamRank = 0;
                                var teamRankValue = (decimal?)null;
                            }

                            @foreach (var item in Model.GameScoreTeamList.Where(r => ((r.GameCount >= Model.RegulationGames && !Model.IsIgnoreRegulationGames) || (Model.IsIgnoreRegulationGames))).OrderByDescending(r => r.OrderValue))
                            {
                                <tr>
                                    @if (!string.IsNullOrEmpty(Model.SelectTeamID))
                                    {
                                        <td class="align-middle column-fix-left">
                                            <a asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@item.Team.TeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting">@item.Team.TeamName</a>
                                        </td>
                                    }
                                    else
                                    {
                                        <td class="text-center align-middle column-fix-left">
                                            @if (teamRankValue != item.OrderValue)
                                            {
                                                teamRank += 1;
                                                @teamRank
                                            }
                                            @{teamRankValue = item.OrderValue;}
                                        </td>
                                        <td class="align-middle">
                                            <a asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@item.Team.TeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting">@item.Team.TeamName</a>
                                        </td>
                                    }
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.GameCount)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.WinRateFormat)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.Win)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.Lose)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.Draw)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.BattingAverageFormat)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.Hit)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.DoubleHit)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.TripleHit)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.HomeRun)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.RBI)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.Run)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.StolenBaseSuccessRateFormat)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.StolenBase)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.FourBall)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.DeadBall)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.Sacrifice)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.SacrificeFly)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.LeftOnBase)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.OnBasePercentageFormat)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.SluggingPercentageFormat)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.OpsFormat)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.ScoringPositionBattingAverageFormat)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.StrikeOut)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.StopStolenBaseRateFormat)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.StopStolenBase)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.OwnError)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.EarnedRunAverageFormat)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.PitcherBattingAverageFormat)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.PitcherHit)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.PitcherHomeRun)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.PitcherRun)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.PitcherEarnedRun)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.PitcherFourBall)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.PitcherDeadBall)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.WhipFormat)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.PitcherScoringPositionBattingAverageFormat)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.PitcherStrikeOutRateFormat)
                                    </td>
                                    <td class="text-center align-middle">
                                        @Html.DisplayFor(modelItem => item.PitcherStrikeOut)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
}

@if (Model.GameScorePitcherList.Any())
{
    <div class="box">
        <div class="box-title">
            投手成績
        </div>
        <div class="box-inner">
            <div class="row">
                <div class="col-md-4">
                    <h6>勝利</h6>
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                            <thead class="thead-light">
                                <tr>
                                    <th class="text-center column-fix-left">
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].Rank)
                                    </th>

                                    @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                    {
                                        <th>
                                            チーム
                                        </th>
                                    }
                                    <th>
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].MemberID)
                                    </th>
                                    <th class="text-center">
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].Win)
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var winRank = 0;
                                    var winRankValue = -1;
                                }

                                @foreach (var item in Model.GameScorePitcherList.OrderByDescending(r => r.Win).Take(10))
                                {
                                    <tr>
                                        <td class="text-center align-middle column-fix-left">
                                            @if (winRankValue != item.Win.NullToZero())
                                            {
                                                winRank += 1;
                                                @winRank
                                            }
                                            @{winRankValue = item.Win.NullToZero();}
                                        </td>
                                        @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                        {
                                            <td class="align-middle">
                                                <a asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@item.TeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting">@item.Member.Team.TeamAbbreviation</a>
                                            </td>
                                        }
                                        <td class="align-middle">
                                            <a asp-page="/Member/Details" asp-route-id="@item.Member.MemberID">@item.Member.MemberName</a>
                                        </td>
                                        <td class="text-center align-middle">
                                            @Html.DisplayFor(modelItem => item.Win)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-4">
                    <h6>防御率</h6>
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                            <thead class="thead-light">
                                <tr>
                                    <th class="text-center column-fix-left">
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].Rank)
                                    </th>

                                    @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                    {
                                        <th>
                                            チーム
                                        </th>
                                    }
                                    <th>
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].MemberID)
                                    </th>
                                    <th class="text-center">
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].EarnedRunAverage)
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var earnedRunAverageRank = 0;
                                    var earnedRunAverageRankValue = (decimal)-1;
                                }

                                @foreach (var item in Model.GameScorePitcherList.Where(r => ((r.Inning >= Model.RegulationInnings && !Model.IsIgnoreRegulationInnings) || (Model.IsIgnoreRegulationInnings))).OrderBy(r => r.EarnedRunAverage).Take(10))
                                {
                                    <tr>
                                        <td class="text-center align-middle column-fix-left">
                                            @if (earnedRunAverageRankValue != item.EarnedRunAverage.NullToZero())
                                            {
                                                earnedRunAverageRank += 1;
                                                @earnedRunAverageRank
                                            }
                                            @{earnedRunAverageRankValue = item.EarnedRunAverage.NullToZero();}
                                        </td>
                                        @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                        {
                                            <td class="align-middle">
                                                <a asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@item.TeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting">@item.Member.Team.TeamAbbreviation</a>
                                            </td>
                                        }
                                        <td class="align-middle">
                                            <a asp-page="/Member/Details" asp-route-id="@item.Member.MemberID">@item.Member.MemberName</a>
                                        </td>
                                        <td class="text-center align-middle">
                                            @Html.DisplayFor(modelItem => item.EarnedRunAverageFormat)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-4">
                    <h6>奪三振</h6>
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                            <thead class="thead-light">
                                <tr>
                                    <th class="text-center column-fix-left">
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].Rank)
                                    </th>

                                    @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                    {
                                        <th>
                                            チーム
                                        </th>
                                    }
                                    <th>
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].MemberID)
                                    </th>
                                    <th class="text-center">
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].StrikeOut)
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var strikeOutRank = 0;
                                    var strikeOutRankValue = -1;
                                }

                                @foreach (var item in Model.GameScorePitcherList.OrderByDescending(r => r.StrikeOut).Take(10))
                                {
                                    <tr>
                                        <td class="text-center align-middle column-fix-left">
                                            @if (strikeOutRankValue != item.StrikeOut.NullToZero())
                                            {
                                                strikeOutRank += 1;
                                                @strikeOutRank
                                            }
                                            @{strikeOutRankValue = item.StrikeOut.NullToZero();}
                                        </td>
                                        @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                        {
                                            <td class="align-middle">
                                                <a asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@item.TeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting">@item.Member.Team.TeamAbbreviation</a>
                                            </td>
                                        }
                                        <td class="align-middle">
                                            <a asp-page="/Member/Details" asp-route-id="@item.Member.MemberID">@item.Member.MemberName</a>
                                        </td>
                                        <td class="text-center align-middle">
                                            @Html.DisplayFor(modelItem => item.StrikeOut)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-4">
                    <h6>勝率</h6>
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                            <thead class="thead-light">
                                <tr>
                                    <th class="text-center column-fix-left">
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].Rank)
                                    </th>

                                    @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                    {
                                        <th>
                                            チーム
                                        </th>
                                    }
                                    <th>
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].MemberID)
                                    </th>
                                    <th class="text-center">
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].WinRate)
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var winRateRank = 0;
                                    var winRateRankValue = (decimal)-1;
                                }

                                @foreach (var item in Model.GameScorePitcherList.Where(r => ((r.Inning >= Model.RegulationInnings && !Model.IsIgnoreRegulationInnings) || (Model.IsIgnoreRegulationInnings))).OrderByDescending(r => r.WinRate).Take(10))
                                {
                                    <tr>
                                        <td class="text-center align-middle column-fix-left">
                                            @if (winRateRankValue != item.WinRate.NullToZero())
                                            {
                                                winRateRank += 1;
                                                @winRateRank
                                            }
                                            @{winRateRankValue = item.WinRate.NullToZero();}
                                        </td>
                                        @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                        {
                                            <td class="align-middle">
                                                <a asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@item.TeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting">@item.Member.Team.TeamAbbreviation</a>
                                            </td>
                                        }
                                        <td class="align-middle">
                                            <a asp-page="/Member/Details" asp-route-id="@item.Member.MemberID">@item.Member.MemberName</a>
                                        </td>
                                        <td class="text-center align-middle">
                                            @Html.DisplayFor(modelItem => item.WinRateFormat)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-4">
                    <h6>ホールド</h6>
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                            <thead class="thead-light">
                                <tr>
                                    <th class="text-center column-fix-left">
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].Rank)
                                    </th>

                                    @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                    {
                                        <th>
                                            チーム
                                        </th>
                                    }
                                    <th>
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].MemberID)
                                    </th>
                                    <th class="text-center">
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].Hold)
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var holdRank = 0;
                                    var holdRankValue = -1;
                                }

                                @foreach (var item in Model.GameScorePitcherList.OrderByDescending(r => r.Hold).Take(10))
                                {
                                    <tr>
                                        <td class="text-center align-middle column-fix-left">
                                            @if (holdRankValue != item.Hold.NullToZero())
                                            {
                                                holdRank += 1;
                                                @holdRank
                                            }
                                            @{holdRankValue = item.Hold.NullToZero();}
                                        </td>
                                        @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                        {
                                            <td class="align-middle">
                                                <a asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@item.TeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting">@item.Member.Team.TeamAbbreviation</a>
                                            </td>
                                        }
                                        <td class="align-middle">
                                            <a asp-page="/Member/Details" asp-route-id="@item.Member.MemberID">@item.Member.MemberName</a>
                                        </td>
                                        <td class="text-center align-middle">
                                            @Html.DisplayFor(modelItem => item.Hold)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-4">
                    <h6>セーブ</h6>
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                            <thead class="thead-light">
                                <tr>
                                    <th class="text-center column-fix-left">
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].Rank)
                                    </th>

                                    @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                    {
                                        <th>
                                            チーム
                                        </th>
                                    }
                                    <th>
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].MemberID)
                                    </th>
                                    <th class="text-center">
                                        @Html.DisplayNameFor(model => model.GameScorePitcherList[0].Save)
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var saveRank = 0;
                                    var saveRankValue = -1;
                                }

                                @foreach (var item in Model.GameScorePitcherList.OrderByDescending(r => r.Save).Take(10))
                                {
                                    <tr>
                                        <td class="text-center align-middle column-fix-left">
                                            @if (saveRankValue != item.Save.NullToZero())
                                            {
                                                saveRank += 1;
                                                @saveRank
                                            }
                                            @{saveRankValue = item.Save.NullToZero();}
                                        </td>
                                        @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                        {
                                            <td class="align-middle">
                                                <a asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@item.TeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting">@item.Member.Team.TeamAbbreviation</a>
                                            </td>
                                        }
                                        <td class="align-middle">
                                            <a asp-page="/Member/Details" asp-route-id="@item.Member.MemberID">@item.Member.MemberName</a>
                                        </td>
                                        <td class="text-center align-middle">
                                            @Html.DisplayFor(modelItem => item.Save)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <a class="btn btn-primary" asp-page="/Score/Index" asp-route-scorePageClass="@ScorePageClass.Pitcher" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="EarnedRunAverage">投手成績詳細</a>
            </div>
        </div>
    </div>
}

@if (Model.GameScoreFielderList.Any())
{
    <div class="box">
        <div class="box-title">
            野手成績
        </div>
        <div class="box-inner">
            <div class="row">
                <div class="col-md-4">
                    <h6>打率</h6>
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                            <thead class="thead-light">
                                <tr>
                                    <th class="text-center column-fix-left">
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].Rank)
                                    </th>

                                    @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                    {
                                        <th>
                                            チーム
                                        </th>
                                    }
                                    <th>
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].MemberID)
                                    </th>
                                    <th class="text-center">
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].BattingAverage)
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var battingAverageRank = 0;
                                    var battingAverageRankValue = (decimal)-1;
                                }

                                @foreach (var item in Model.GameScoreFielderList.Where(r => ((r.PlateAppearance >= Model.RegulationAtBatting && !Model.IsIgnoreRegulationAtBatting) || (Model.IsIgnoreRegulationAtBatting))).OrderByDescending(r => r.BattingAverage).Take(10))
                                {
                                    <tr>
                                        <td class="text-center align-middle column-fix-left">
                                            @if (battingAverageRankValue != item.BattingAverage.NullToZero())
                                            {
                                                battingAverageRank += 1;
                                                @battingAverageRank
                                            }

                                            @{battingAverageRankValue = item.BattingAverage.NullToZero();}
                                        </td>
                                        @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                        {
                                            <td class="align-middle">
                                                <a asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@item.TeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting">@item.Member.Team.TeamAbbreviation</a>
                                            </td>
                                        }
                                        <td class="align-middle">
                                            <a asp-page="/Member/Details" asp-route-id="@item.Member.MemberID">@item.Member.MemberName</a>
                                        </td>
                                        <td class="text-center align-middle">
                                            @Html.DisplayFor(modelItem => item.BattingAverageFormat)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-4">
                    <h6>本塁打</h6>
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                            <thead class="thead-light">
                                <tr>
                                    <th class="text-center column-fix-left">
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].Rank)
                                    </th>

                                    @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                    {
                                        <th>
                                            チーム
                                        </th>
                                    }
                                    <th>
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].MemberID)
                                    </th>
                                    <th class="text-center">
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].HomeRun)
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var homeRunRank = 0;
                                    var homeRunValue = -1;
                                }

                                @foreach (var item in Model.GameScoreFielderList.OrderByDescending(r => r.HomeRun).Take(10))
                                {
                                    <tr>
                                        <td class="text-center align-middle column-fix-left">
                                            @if (homeRunValue != item.HomeRun.NullToZero())
                                            {
                                                homeRunRank += 1;
                                                @homeRunRank
                                            }
                                            @{homeRunValue = item.HomeRun.NullToZero();}
                                        </td>
                                        @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                        {
                                            <td class="align-middle">
                                                <a asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@item.TeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting">@item.Member.Team.TeamAbbreviation</a>
                                            </td>
                                        }
                                        <td class="align-middle">
                                            <a asp-page="/Member/Details" asp-route-id="@item.Member.MemberID">@item.Member.MemberName</a>
                                        </td>
                                        <td class="text-center align-middle">
                                            @Html.DisplayFor(modelItem => item.HomeRun)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-4">
                    <h6>打点</h6>
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                            <thead class="thead-light">
                                <tr>
                                    <th class="text-center column-fix-left">
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].Rank)
                                    </th>

                                    @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                    {
                                        <th>
                                            チーム
                                        </th>
                                    }
                                    <th>
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].MemberID)
                                    </th>
                                    <th class="text-center">
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].RBI)
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var rbiRank = 0;
                                    var rbiRankValue = -1;
                                }

                                @foreach (var item in Model.GameScoreFielderList.OrderByDescending(r => r.RBI).Take(10))
                                {
                                    <tr>
                                        <td class="text-center align-middle column-fix-left">
                                            @if (rbiRankValue != item.RBI.NullToZero())
                                            {
                                                rbiRank += 1;
                                                @rbiRank
                                            }
                                            @{rbiRankValue = item.RBI.NullToZero();}
                                        </td>
                                        @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                        {
                                            <td class="align-middle">
                                                <a asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@item.TeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting">@item.Member.Team.TeamAbbreviation</a>
                                            </td>
                                        }
                                        <td class="align-middle">
                                            <a asp-page="/Member/Details" asp-route-id="@item.Member.MemberID">@item.Member.MemberName</a>
                                        </td>
                                        <td class="text-center align-middle">
                                            @Html.DisplayFor(modelItem => item.RBI)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-4">
                    <h6>出塁率</h6>
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                            <thead class="thead-light">
                                <tr>
                                    <th class="text-center column-fix-left">
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].Rank)
                                    </th>

                                    @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                    {
                                        <th>
                                            チーム
                                        </th>
                                    }
                                    <th>
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].MemberID)
                                    </th>
                                    <th class="text-center">
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].OnBasePercentage)
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var onBasePercentageRank = 0;
                                    var onBasePercentageRankValue = (decimal)-1;
                                }

                                @foreach (var item in Model.GameScoreFielderList.Where(r => ((r.PlateAppearance >= Model.RegulationAtBatting && !Model.IsIgnoreRegulationAtBatting) || (Model.IsIgnoreRegulationAtBatting))).OrderByDescending(r => r.OnBasePercentage).Take(10))
                                {
                                    <tr>
                                        <td class="text-center align-middle column-fix-left">
                                            @if (onBasePercentageRankValue != item.OnBasePercentage.NullToZero())
                                            {
                                                onBasePercentageRank += 1;
                                                @onBasePercentageRank
                                            }

                                            @{onBasePercentageRankValue = item.OnBasePercentage.NullToZero();}
                                        </td>
                                        @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                        {
                                            <td class="align-middle">
                                                <a asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@item.TeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting">@item.Member.Team.TeamAbbreviation</a>
                                            </td>
                                        }
                                        <td class="align-middle">
                                            <a asp-page="/Member/Details" asp-route-id="@item.Member.MemberID">@item.Member.MemberName</a>
                                        </td>
                                        <td class="text-center align-middle">
                                            @Html.DisplayFor(modelItem => item.OnBasePercentageFormat)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-4">
                    <h6>安打</h6>
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                            <thead class="thead-light">
                                <tr>
                                    <th class="text-center column-fix-left">
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].Rank)
                                    </th>

                                    @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                    {
                                        <th>
                                            チーム
                                        </th>
                                    }
                                    <th>
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].MemberID)
                                    </th>
                                    <th class="text-center">
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].Hit)
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var hitRank = 0;
                                    var hitRankValue = -1;
                                }

                                @foreach (var item in Model.GameScoreFielderList.OrderByDescending(r => r.Hit).Take(10))
                                {
                                    <tr>
                                        <td class="text-center align-middle column-fix-left">
                                            @if (hitRankValue != item.Hit.NullToZero())
                                            {
                                                hitRank += 1;
                                                @hitRank
                                            }
                                            @{hitRankValue = item.Hit.NullToZero();}
                                        </td>
                                        @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                        {
                                            <td class="align-middle">
                                                <a asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@item.TeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting">@item.Member.Team.TeamAbbreviation</a>
                                            </td>
                                        }
                                        <td class="align-middle">
                                            <a asp-page="/Member/Details" asp-route-id="@item.Member.MemberID">@item.Member.MemberName</a>
                                        </td>
                                        <td class="text-center align-middle">
                                            @Html.DisplayFor(modelItem => item.Hit)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-4">
                    <h6>盗塁</h6>
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                            <thead class="thead-light">
                                <tr>
                                    <th class="text-center column-fix-left">
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].Rank)
                                    </th>

                                    @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                    {
                                        <th>
                                            チーム
                                        </th>
                                    }
                                    <th>
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].MemberID)
                                    </th>
                                    <th class="text-center">
                                        @Html.DisplayNameFor(model => model.GameScoreFielderList[0].StolenBase)
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var stolenBaseRank = 0;
                                    var stolenBaseRankValue = -1;
                                }

                                @foreach (var item in Model.GameScoreFielderList.OrderByDescending(r => r.StolenBase).Take(10))
                                {
                                    <tr>
                                        <td class="text-center align-middle column-fix-left">
                                            @if (stolenBaseRankValue != item.StolenBase.NullToZero())
                                            {
                                                stolenBaseRank += 1;
                                                @stolenBaseRank
                                            }
                                            @{stolenBaseRankValue = item.StolenBase.NullToZero();}
                                        </td>
                                        @if (string.IsNullOrEmpty(Model.SelectTeamID))
                                        {
                                            <td class="align-middle">
                                                <a asp-page="/Score/Index" asp-route-scorePageClass="@Model.ScorePageClass" asp-route-teamID="@item.TeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting">@item.Member.Team.TeamAbbreviation</a>
                                            </td>
                                        }
                                        <td class="align-middle">
                                            <a asp-page="/Member/Details" asp-route-id="@item.Member.MemberID">@item.Member.MemberName</a>
                                        </td>
                                        <td class="text-center align-middle">
                                            @Html.DisplayFor(modelItem => item.StolenBase)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <a class="btn btn-primary" asp-page="/Score/Index" asp-route-scorePageClass="@ScorePageClass.Fielder" asp-route-teamID="@Model.SelectTeamID" asp-route-isPublic="@Model.IsPublic" asp-route-year="@Model.Year" asp-route-gameClass="@Model.GameClass" asp-route-teamCategoryClass="@Model.TeamCategoryClass" asp-route-useBallClass="@Model.UseBallClass" asp-route-isIgnoreRegulationGames="@Model.IsIgnoreRegulationGames" asp-route-isIgnoreRegulationInnings="@Model.IsIgnoreRegulationInnings" asp-route-isIgnoreRegulationAtBatting="@Model.IsIgnoreRegulationAtBatting" asp-route-sortItem="BattingAverage">野手成績詳細</a>
            </div>
        </div>
    </div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/score.js"></script>
}
